require 'rake/clean'
require 'rototiller'

desc 'Run acceptance tests'

desc "Generate Beaker Host config"
task :host_config do
  if ENV["BEAKER_CONFIG"]
    next
  end
  if not ENV['TEST_TARGET']
    fail "FATAL: must set TEST_TARGET environment variable."
  end

  generate = "bundle exec beaker-hostgenerator"
  generate += " --disable-default-role #{ENV['TEST_TARGET']}"
  generate += " > hosts.cfg"
  sh generate
  sh "cat hosts.cfg"
end

desc 'Check the redis version if Jenkins'
task :check_redis_pe_ver do
  if !ENV['BEAKER_PE_VER']
    ENV['BEAKER_PE_VER'] = `redis-cli -h redis.delivery.puppetlabs.net get #{ENV['PE_FAMILY']}_pe_version`.strip
  else
    warn 'BEAKER_PE_VER already set, skipping check with redis'
  end
end

desc "Run beaker based acceptance tests"
task acceptance: :host_config
task acceptance: :check_redis_pe_ver unless ENV["BEAKER_TYPE"] == 'foss'
task :acceptance do

  #fail if SHA not present
  fail "SHA must be set in order to setup repositories!!!" if !ENV['SHA']

  default_pe_dir = "https://artifactory.delivery.puppetlabs.net/artifactory/generic_enterprise__local/#{ENV['PE_FAMILY']}/ci-ready"
  ENV['BEAKER_PE_DIR'] ||= default_pe_dir unless ENV["BEAKER_TYPE"] == 'foss'

  config = ENV["BEAKER_CONFIG"] || 'hosts.cfg'
  preserve_hosts = ENV["BEAKER_PRESERVEHOSTS"] || 'onfail'
  type = ENV["BEAKER_TYPE"] || 'pe'
  keyfile = ENV["BEAKER_KEYFILE"] || "#{ENV['HOME']}/.ssh/id_rsa-acceptance"
  test_suite = ENV["BEAKER_TESTSUITE"] || "#{type}/tests/"
  pre_suite = ENV["BEAKER_PRESUITE"] || "#{type}/setup/pre_suite"
  opts = ENV["BEAKER_OPTS"] || ''

  fail "PE_FAMILY must be set in order to run acceptance with Puppet Enterprise" if !ENV['PE_FAMILY'] && type == 'pe'

  init = "bundle exec beaker init"
  init += " --xml"
  init += " --debug"
  init += " --no-color"
  init += " --repo-proxy"
  init += " --hosts #{config}" if config != ''
  init += " --preserve-hosts #{preserve_hosts}" if preserve_hosts != ''
  init += " --type #{type}" if type != ''
  init += " --keyfile #{keyfile}" if keyfile != ''
  init += " --tests #{test_suite}" if test_suite != ''
  init += " --pre-suite #{pre_suite}" if pre_suite != ''
  init += " #{opts}" if opts != ''
  sh init

  sh "bundle exec beaker provision"
  sh "bundle exec beaker exec pre-suite"
  sh "bundle exec beaker exec tests"
  sh "bundle exec beaker destroy"
end

namespace :ci do
  namespace :test do

    desc 'This task is used by CI to test the package pe-client-tools'
    rototiller_task :package => [:set_test_target]do |t|

      flags = [
          {:name => '--xml', :is_boolean => true},
          {:name => '--no-color', :is_boolean => true},
          {:name => '--debug', :is_boolean => true},
          {:name => '--hosts', :override_env => 'BEAKER_HOSTS'},
          {:name => '--preserve-hosts', :default => 'onfail', :override_env => 'BEAKER_PRESERVEHOSTS'},
          {:name => '--keyfile', :default => "#{ENV['HOME']}/.ssh/id_rsa-acceptance", :override_env => 'BEAKER_KEYFILE'},
          {:name => '--pre-suite', :default => 'pe/setup/pre_suite', :override_env => 'BEAKER_PRESUITE'},
          {:name => '--tests', :default => 'pe/tests', :override_env => 'BEAKER_TESTSUITE'},
      ]

      t.add_flag(*flags)

      t.add_env(:name => 'SHA',           :message => 'The sha for pe-client-tools')
      t.add_env(:name => 'SUITE_VERSION', :message => 'The suite version used by Jenkins')
      t.add_env(:name => 'PE_FAMILY',     :message => 'The puppet enterprise major branch to install from')

      t.add_env do |env|
        env.name = 'pe_dist_dir'
        env.message = 'The location to download PE from example "http://neptune.puppetlabs.lan/20XX.X/ci-ready"'
        ENV['pe_dist_dir'] ||= "http://neptune.puppetlabs.lan/#{ENV['PE_FAMILY']}/ci-ready"
      end

      t.add_command({:name => 'beaker', :override_env => 'BEAKER_EXECUTABLE'})
    end

    task :set_test_target do
      if ENV['BEAKER_HOSTS'].nil?
        client = ENV['CLIENT_TEST_TARGET'] || (fail 'The environment variable CLIENT_TEST_TARGET must be set.')
        # process the CLIENT_TEST_TARGET variable and assign it to TEST_TARGET so that rototiller will pick it up
        monolithic_config = "#{client}client.mdca"
        master_agent_config = "centos7-64.mdca-#{client}client.a"
        ENV['BEAKER_HOSTS'] ||= (client =~ /win|osx/) ? master_agent_config : monolithic_config
      end
    end

  end
end

